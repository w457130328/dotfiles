#!/bin/bash
# ========================================
# Dotfiles Installer
# Author: jiangtao
# For: Arch Linux
# Safe, Idempotent, and Production-Ready
# ========================================

# ÂêØÁî®‰∏•Ê†ºÊ®°ÂºèÔºöÂá∫ÈîôÈÄÄÂá∫„ÄÅÊú™ÂÆö‰πâÂèòÈáèÊä•Èîô„ÄÅÁÆ°ÈÅìÈîôËØØÊ£ÄÊµã
set -euo pipefail

# È¢úËâ≤ÂÆö‰πâÔºàÁî®‰∫éËæìÂá∫Ôºâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log() { echo -e "${GREEN}‚úÖ $1${NC}"; }
warn() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }
info() { echo -e "üí° $1"; }

# Ëé∑ÂèñËÑöÊú¨ÊâÄÂú®ÁõÆÂΩï
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOTFILES_DIR="$(dirname "$SCRIPT_DIR")"

echo "üöÄ ${GREEN}Installing dotfiles from:${NC} $DOTFILES_DIR"
cd "$DOTFILES_DIR"

# ------------------------------------------------------------------
# 1. Ê£ÄÊü•Âπ∂ÂÆâË£Ö stow
# ------------------------------------------------------------------
if ! command -v stow &> /dev/null; then
    info "stow not found. Installing stow..."
    if command -v pacman &> /dev/null; then
        sudo pacman -S --noconfirm stow && log "stow installed"
    else
        error "Unsupported OS: no pacman found. Please install 'stow' manually."
        exit 1
    fi
else
    log "stow is already installed"
fi

# ------------------------------------------------------------------
# 2. Ê£ÄÊü•Âπ∂ÂÆâË£Ö oh-my-zsh
# ------------------------------------------------------------------
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    info "oh-my-zsh not found. Installing..."
    if command -v curl &> /dev/null; then
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
        log "oh-my-zsh installed"
    else
        error "curl not found. Please install curl or download install.sh manually."
        exit 1
    fi
else
    log "oh-my-zsh is already installed"
fi

# ------------------------------------------------------------------
# 3. Â§á‰ªΩÂπ∂ÈìæÊé• oh-my-zsh Ëá™ÂÆö‰πâÈÖçÁΩÆ
# ------------------------------------------------------------------
OH_MY_ZSH_CUSTOM="$HOME/.oh-my-zsh/custom"
BACKUP_DIR="$HOME/.dotfiles-backup/oh-my-zsh-custom-$(date +%Y%m%d-%H%M%S)"

if [ -e "$OH_MY_ZSH_CUSTOM" ] && [ ! -L "$OH_MY_ZSH_CUSTOM" ]; then
    warn "Existing oh-my-zsh custom directory found (not a symlink): $OH_MY_ZSH_CUSTOM"
    info "Backing up to: $BACKUP_DIR"
    mkdir -p "$(dirname "$BACKUP_DIR")"
    mv "$OH_MY_ZSH_CUSTOM" "$BACKUP_DIR"
    log "Backup completed"
elif [ -L "$OH_MY_ZSH_CUSTOM" ]; then
    info "Existing symlink found, removing: $OH_MY_ZSH_CUSTOM"
    rm -f "$OH_MY_ZSH_CUSTOM"
else
    info "No existing oh-my-zsh custom found"
fi

info "Linking oh-my-zsh custom config..."
ln -sf "$DOTFILES_DIR/zsh/oh-my-zsh-custom/custom" "$OH_MY_ZSH_CUSTOM"
log "oh-my-zsh custom linked"

# ------------------------------------------------------------------
# 4. ‰ΩøÁî® stow ÈìæÊé•ÊâÄÊúâÊ®°ÂùóÔºàÂÆâÂÖ®ÂπÇÁ≠âÔºâ
# ------------------------------------------------------------------
declare -a MODULES=("zsh" "vim" "git")

for module in "${MODULES[@]}"; do
    if [ -d "$module" ]; then
        info "Stowing module: $module"
        if stow -v 1 --adopt -t "$HOME" "$module" 2>/dev/null || true; then
            # Â¶ÇÊûú stow Â§±Ë¥•ÔºàÊØîÂ¶ÇÊñá‰ª∂ÂÜ≤Á™ÅÔºâÔºåÂ∞ùËØïÂÖàÂà†Èô§ÂÜ≤Á™Å
            stow -v 1 -D -t "$HOME" "$module" 2>/dev/null || true
            stow -v 1 -t "$HOME" "$module"
        fi
        log "Module $module installed"
    else
        warn "Module $module not found, skipping."
    fi
done

# ------------------------------------------------------------------
# 5. ËÆæÁΩÆ ~/bin Âπ∂ÈìæÊé•ËÑöÊú¨
# ------------------------------------------------------------------
BIN_DIR="$HOME/bin"
SCRIPTS_DIR="$DOTFILES_DIR/bin"

if [ ! -d "$BIN_DIR" ]; then
    info "Creating $BIN_DIR"
    mkdir -p "$BIN_DIR"
fi

if [ -d "$SCRIPTS_DIR" ]; then
    info "Linking scripts from $SCRIPTS_DIR to $BIN_DIR"
    for script in "$SCRIPTS_DIR"/*; do
        if [ -f "$script" ] || [ -x "$script" ]; then
            script_name=$(basename "$script")
            ln -sf "$script" "$BIN_DIR/$script_name"
        fi
    done
    log "All scripts linked to $BIN_DIR"
else
    warn "Scripts directory $SCRIPTS_DIR not found."
fi

# ------------------------------------------------------------------
# 6. ÊèêÁ§∫Áî®Êà∑ÂÆåÊàê
# ------------------------------------------------------------------
echo ""
echo "üéâ ${GREEN}Dotfiles installed successfully!${NC}"
echo ""
info "Please restart your shell or run:"
echo "   exec zsh"
echo "   or open a new terminal."
echo ""
info "Backup location: $HOME/.dotfiles-backup/"
echo ""

# Ê£ÄÊü• ~/bin ÊòØÂê¶Âú® PATH ‰∏≠
if [[ ":$PATH:" != *":$HOME/bin:"* ]]; then
    warn "‚ö†Ô∏è  ~/bin is not in your PATH."
    info "Add this to your .zshrc:"
    echo 'export PATH="$HOME/bin:$PATH"'
fi
